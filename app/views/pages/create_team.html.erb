<!-- Create Team Page -->
<div class="min-h-screen bg-gradient-to-br from-gray-900 via-red-900 to-black">
  <!-- CSRF Token for JavaScript functions -->
  <meta name="csrf-token" content="<%= form_authenticity_token %>">

  <!-- Navigation Header -->
  <%= render 'shared/navigation' %>

  <!-- Page Title -->
  <div class="bg-gradient-to-br from-gray-900 to-gray-800 py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <h1 class="text-4xl font-bold text-white text-center mb-2">Create My Team</h1>
      <p class="text-xl text-gray-300 text-center">Build your championship-winning fantasy F1 team</p>
    </div>
  </div>

  <!-- Main Content -->
  <div class="container mx-auto px-4 py-8">
    <!-- Team Edit Locked Message (only for users with existing teams) -->
    <% if @has_team && !can_edit_team? %>
      <div class="max-w-4xl mx-auto mb-8">
        <div class="bg-gradient-to-br from-red-800 to-red-900 p-8 rounded-2xl border border-red-600 shadow-2xl">
          <div class="text-center">
            <h2 class="text-3xl font-bold text-white mb-4">üîí Team Editing is Currently Locked</h2>
            <p class="text-xl text-gray-300 mb-6"><%= team_edit_status[:message] %></p>
            
            <% if team_edit_status[:next_unlock] == "mid_season_break" %>
              <div class="bg-blue-600 text-white p-4 rounded-lg mb-4">
                <p class="text-lg font-semibold">Teams will unlock during the mid-season break</p>
              </div>
            <% end %>
            
            <div class="flex justify-center space-x-4">
              <a href="/dashboard" class="bg-gradient-to-r from-gray-600 to-gray-700 text-white px-6 py-3 rounded-lg hover:from-gray-700 hover:to-gray-800 transform hover:scale-105 transition-all duration-300">
                Back to Dashboard
              </a>
              <a href="/my-team" class="bg-gradient-to-r from-red-600 to-red-700 text-white px-6 py-3 rounded-lg hover:from-red-700 hover:to-red-800 transform hover:scale-105 transition-all duration-300">
                View My Team
              </a>
            </div>
          </div>
        </div>
      </div>
    <% else %>
      <!-- Team Builder Content -->
      <div data-react-component="TeamBuilder"></div>
    <% end %>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  let selectedDrivers = [];
  let selectedConstructor = null;
  let totalCost = 0;
  const budget = <%= @total_budget %>;

  // Driver selection
  document.querySelectorAll('.select-driver-btn').forEach(btn => {
    btn.addEventListener('click', function() {
      const card = this.closest('.driver-card');
      const checkbox = card.querySelector('.driver-checkbox');
      const price = parseInt(card.dataset.price);
      const driverId = card.dataset.driverId;
      const driverName = card.querySelector('h3').textContent;

      if (checkbox.checked) {
        // Deselect
        checkbox.checked = false;
        selectedDrivers = selectedDrivers.filter(d => d.id !== driverId);
        totalCost -= price;
        this.textContent = 'Select';
        card.classList.remove('bg-red-800', 'bg-red-900');
        card.classList.add('hover:bg-gray-700');
      } else {
        // Select (if under limit)
        if (selectedDrivers.length < 2) {
          checkbox.checked = true;
          selectedDrivers.push({ id: driverId, name: driverName, price: price });
          totalCost += price;
          this.textContent = 'Selected ‚úì';
          card.classList.remove('hover:bg-gray-700');
          card.classList.add('bg-red-800', 'bg-red-900');
        } else {
          alert('You can only select 2 drivers!');
          return;
        }
      }
      updateBudget();
      updateTeamPreview();
    });
  });

  // Constructor selection
  document.querySelectorAll('.select-constructor-btn').forEach(btn => {
    btn.addEventListener('click', function() {
      const card = this.closest('.constructor-card');
      const radio = card.querySelector('.constructor-radio');
      const price = parseInt(card.dataset.price);
      const constructorId = card.dataset.constructorId;
      const constructorName = card.querySelector('h3').textContent;

      // Deselect all constructors first
      document.querySelectorAll('.constructor-radio').forEach(r => r.checked = false);
      document.querySelectorAll('.select-constructor-btn').forEach(b => b.textContent = 'Select');
      document.querySelectorAll('.constructor-card').forEach(c => {
        c.classList.remove('bg-red-800', 'bg-red-900');
        c.classList.add('hover:bg-gray-700');
      });

      // Select this constructor
      radio.checked = true;
      selectedConstructor = { id: constructorId, name: constructorName, price: price };
      this.textContent = 'Selected ‚úì';
      card.classList.remove('hover:bg-gray-700');
      card.classList.add('bg-red-800', 'bg-red-900');

      updateBudget();
      updateTeamPreview();
    });
  });

  function updateBudget() {
    const remaining = budget - totalCost;
    document.getElementById('total-cost').textContent = `$${totalCost}M`;
    document.getElementById('remaining-budget').textContent = `$${remaining}M`;
    
    // Color coding
    const remainingEl = document.getElementById('remaining-budget');
    if (remaining < 0) {
      remainingEl.className = 'text-3xl font-bold text-red-400';
    } else if (remaining < 10) {
      remainingEl.className = 'text-3xl font-bold text-yellow-400';
    } else {
      remainingEl.className = 'text-3xl font-bold text-blue-400';
    }
  }

  function updateTeamPreview() {
    const teamDiv = document.getElementById('selected-team');
    let html = '';

    if (selectedDrivers.length > 0 || selectedConstructor) {
      html += '<div class="grid grid-cols-1 md:grid-cols-2 gap-6">';
      
      if (selectedDrivers.length > 0) {
        html += '<div><h3 class="text-lg font-bold text-white mb-3">üë§ Drivers:</h3><ul class="space-y-2">';
        selectedDrivers.forEach(driver => {
          html += `<li class="text-gray-300">‚Ä¢ ${driver.name} - $${driver.price}M</li>`;
        });
        html += '</ul></div>';
      }

      if (selectedConstructor) {
        html += '<div><h3 class="text-lg font-bold text-white mb-3">üè≠ Constructor:</h3>';
        // Get team color for the constructor
        const constructorCard = document.querySelector(`[data-constructor-id="${selectedConstructor.id}"]`);
        const teamColor = constructorCard ? constructorCard.dataset.teamColor : '#9CA3AF';
        html += `<p class="text-gray-300">‚Ä¢ <span style="color: ${teamColor}">${selectedConstructor.name}</span> - $${selectedConstructor.price}M</p></div>`;
      }

      html += '</div>';
    } else {
      html = '<p class="text-center text-gray-400">Select your drivers and constructor to see your team preview</p>';
    }

    teamDiv.innerHTML = html;
  }

});
</script> 